{"version":3,"sources":["Components/Feedback/Feedback.styled.js","Components/Feedback/Feedback.js","Components/Notification/Notification.styled.js","Components/Notification/Notification.js","Components/Section/Section.styled.js","Components/Section/Section.js","Components/Statistics/Statistics.styled.js","Components/Statistics/Statistics.js","Components/App/App.js","constants/theme.js","index.js"],"names":["FeedbackBtn","styled","button","props","theme","colors","black","FeedbackOptions","options","leaveFeedback","map","opt","type","name","onClick","toUpperCase","NotificationStyles","p","secondaryText","Notification","message","SectionMain","section","SectionTitle","h2","Section","title","children","StatsList","ul","StatsListItem","li","Statistic","good","neutral","bad","total","positivePercentage","App","useState","setGood","setNeutral","setBad","totalFeedback","positiveFeedback","Math","round","feedback","prevState","Object","freeze","white","green","red","blue","primaryText","spacing","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAEaA,EAAcC,IAAOC,OAAV,6OAMb,SAAAC,GAAK,gBAAOA,EAAMC,MAAMC,OAAOC,U,OCL7BC,EAAkB,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,cACzC,OACE,mCACGD,EAAQE,KAAI,SAAAC,GAAG,OACd,cAACX,EAAD,CAAuBY,KAAK,SAASC,KAAMF,EAAKG,QAAS,kBAAML,EAAcE,IAA7E,SACGA,EAAII,eADWJ,SCLbK,EAAqBf,IAAOgB,EAAV,kEACpB,SAAAd,GAAK,OAAIA,EAAMC,MAAMC,OAAOa,iBCA1BC,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7B,OAAO,cAACJ,EAAD,UAAqBI,KCFjBC,EAAcpB,IAAOqB,QAAV,kIAKZ,SAAAnB,GAAK,0BAAiBA,EAAMC,MAAMC,OAAOa,kBAGxCK,EAAetB,IAAOuB,GAAV,sDCPZC,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC/B,OACE,eAACN,EAAD,WACGK,GAAS,cAACH,EAAD,UAAeG,IACxBC,MCLMC,EAAY3B,IAAO4B,GAAV,yDAKTC,EAAgB7B,IAAO8B,GAAV,yHCJbC,EAAY,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBACrD,OACE,eAACT,EAAD,WACE,eAACE,EAAD,oBAAsBG,KACtB,eAACH,EAAD,uBAAyBI,KACzB,eAACJ,EAAD,mBAAqBK,KACrB,eAACL,EAAD,qBAAuBM,KACvB,eAACN,EAAD,iCAAmCO,EAAnC,W,gBCJC,SAASC,IACd,MAAwBC,mBAAS,GAAjC,mBAAON,EAAP,KAAaO,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOL,EAAP,KAAgBO,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOJ,EAAP,KAAYO,EAAZ,KAqBMC,EAAgBV,EAAOC,EAAUC,EAEjCS,EAAmBC,KAAKC,MAAOb,EAAOU,EAAiB,KAI7D,OACE,qCACE,cAAC,EAAD,CAASjB,MAAM,0BAAf,SACE,cAAC,EAAD,CAAiBlB,QALP,CAAC,OAAQ,UAAW,OAKKC,cA5BjB,SAAAsC,GACtB,OAAQA,GACN,IAAK,OACHP,GAAQ,SAAAQ,GAAS,OAAIA,EAAY,KACjC,MAEF,IAAK,UACHP,GAAW,SAAAO,GAAS,OAAIA,EAAY,KACpC,MAEF,IAAK,MACHN,GAAO,SAAAM,GAAS,OAAIA,EAAY,KAChC,MAEF,QACE,aAeDL,EACC,cAAC,EAAD,CAASjB,MAAM,aAAf,SACE,cAAC,EAAD,CACEO,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOO,EACPN,mBAAoBO,MAIxB,cAAC,EAAD,CAAcxB,QAAQ,4BCpDvB,IAAMhB,EAAQ6C,OAAOC,OAAO,CACjC7C,OAAQ,CACN8C,MAAO,UACP7C,MAAO,UACP8C,MAAO,UACPC,IAAK,UACLC,KAAM,UACNC,YAAa,UACbrC,cAAe,WAEjBsC,QAAS,SAAAC,GAAK,gBAAO,EAAIA,EAAX,S,uBCHhBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAexD,MAAOA,EAAtB,SACE,cAACkC,EAAD,QAGJuB,SAASC,eAAe,W","file":"static/js/main.01d7d963.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const FeedbackBtn = styled.button`\n  /* width: 200px; */\n  margin: 10px;\n  border: 1px solid grey;\n  border-radius: 23px;\n  padding: 12px 24px;\n  color: ${props => `${props.theme.colors.black}`};\n  transition: all 250ms ease-in;\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n","import { FeedbackBtn } from './Feedback.styled';\nimport PropTypes from 'prop-types';\n\nexport const FeedbackOptions = ({ options, leaveFeedback }) => {\n  return (\n    <>\n      {options.map(opt => (\n        <FeedbackBtn key={opt} type=\"button\" name={opt} onClick={() => leaveFeedback(opt)}>\n          {opt.toUpperCase()}\n        </FeedbackBtn>\n      ))}\n    </>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  leaveFeedback: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const NotificationStyles = styled.p`\n  color: ${props => props.theme.colors.secondaryText};\n  text-align: center;\n`;\n","import { NotificationStyles } from './Notification.styled';\nimport PropTypes from 'prop-types';\n\nexport const Notification = ({ message }) => {\n  return <NotificationStyles>{message}</NotificationStyles>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const SectionMain = styled.section`\n  margin: 0 auto;\n  align-items: center;\n  text-align: center;\n  padding: 10vh 0;\n  border: ${props => `1px solid ${props.theme.colors.secondaryText}`};\n`;\n\nexport const SectionTitle = styled.h2`\n  align-items: 'center';\n`;\n","import { SectionMain, SectionTitle } from './Section.styled';\nimport PropTypes from 'prop-types';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionMain>\n      {title && <SectionTitle>{title}</SectionTitle>}\n      {children}\n    </SectionMain>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.object.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const StatsList = styled.ul`\n  padding: 0;\n  margin: 0;\n`;\n\nexport const StatsListItem = styled.li`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  padding: 5px;\n`;\n","import PropTypes from 'prop-types';\nimport { StatsList, StatsListItem } from './Statistics.styled';\n\nexport const Statistic = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <StatsList>\n      <StatsListItem>Good: {good}</StatsListItem>\n      <StatsListItem>Neutral: {neutral}</StatsListItem>\n      <StatsListItem>Bad: {bad}</StatsListItem>\n      <StatsListItem>Total: {total}</StatsListItem>\n      <StatsListItem>Positive feedback: {positivePercentage}%</StatsListItem>\n    </StatsList>\n  );\n};\n\nStatistic.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import { FeedbackOptions } from 'Components/Feedback/Feedback';\nimport { Notification } from 'Components/Notification/Notification';\nimport { Section } from 'Components/Section/Section';\nimport { Statistic } from 'Components/Statistics/Statistics';\nimport React, { useState } from 'react';\n\nexport function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const onLeaveFeedback = feedback => {\n    switch (feedback) {\n      case 'good':\n        setGood(prevState => prevState + 1);\n        break;\n\n      case 'neutral':\n        setNeutral(prevState => prevState + 1);\n        break;\n\n      case 'bad':\n        setBad(prevState => prevState + 1);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const totalFeedback = good + neutral + bad;\n\n  const positiveFeedback = Math.round((good / totalFeedback) * 100);\n\n  const options = ['good', 'neutral', 'bad'];\n\n  return (\n    <>\n      <Section title=\"Please, leave feedback.\">\n        <FeedbackOptions options={options} leaveFeedback={onLeaveFeedback} />\n      </Section>\n      {totalFeedback ? (\n        <Section title=\"Statistic:\">\n          <Statistic\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={totalFeedback}\n            positivePercentage={positiveFeedback}\n          />\n        </Section>\n      ) : (\n        <Notification message=\"No feedback given...\" />\n      )}\n    </>\n  );\n}\n","export const theme = Object.freeze({\n  colors: {\n    white: '#ffffff',\n    black: '#010101',\n    green: '#4caf50',\n    red: '#f44336',\n    blue: '#2196f3',\n    primaryText: '#212121',\n    secondaryText: '#757575',\n  },\n  spacing: value => `${4 * value}px`,\n});\n","import { ThemeProvider } from '@emotion/react';\nimport { App } from 'Components/App/App';\nimport { theme } from 'constants/theme';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}